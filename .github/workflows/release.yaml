name: 'Release a new version to Github Packages'

on:
    release:
        types: [published]

env:
    REGISTRY: ghcr.io

jobs:
    push_to_registry:
        name: Push Docker image to GitHub Packages tagged with "latest" and version number.
        runs-on: ubuntu-latest
        steps:
            - name: Check out the repo
              uses: actions/checkout@v4
            - name: Get the version
              id: get_version
              run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
            - name: Extract metadata (tags, labels) for Docker
              id: meta_base_image
              uses: docker/metadata-action@v5
              with:
                images:
                    ghcr.io/${{ github.repository }}
            - name: Extract metadata (tags, labels) for Docker
              id: meta_clustered_image
              uses: docker/metadata-action@v5
              with:
                images:
                    ghcr.io/${{ github.repository }}-clustered
            - name: Login to ghcr
              uses: docker/login-action@v3
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}
            - name: Build and push base image
              uses: docker/build-push-action@v5
              with:
                  context: ./PLATER/
                  push: true
                  tags: ${{ steps.meta_base_image.outputs.tags }}
                  labels: ${{ steps.meta_base_image.outputs.labels }}
                  build-args: VERSION=${{ steps.get_version.outputs.VERSION }}
            - name: Build and push clustered image
              uses: docker/build-push-action@v5
              with:
                  context: ./PLATER/plater-clustered-docker
                  push: true
                  tags: ${{ steps.meta_clustered_image.outputs.tags }}
                  labels: ${{ steps.meta_clustered_image.outputs.labels }}
                  build-args: VERSION=${{ steps.get_version.outputs.VERSION }}